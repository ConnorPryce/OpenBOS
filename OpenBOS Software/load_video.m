function [frames,range] = load_video(video_path)

    video = VideoReader(video_path);
    n_frames = video.NumFrames;
    frames = [];
    current_frame = 1;
    range = 1:n_frames;
    rectangle_position = [1, 1, video.Width-1, video.Height-1];
    frames = zeros(video.Height, video.Width, n_frames, 'uint8'); 

    for i = 1:n_frames
        frames(:,:,i) = rgb2gray(read(video,i));  
    end
    
    figure_handle = figure('Name', 'OpenBOS - Crop Video & Trim Frames', ...
                           'NumberTitle', 'off', ...
                           'Position', [600, 200, 700, 500]);

    axis_handle = axes('Parent', figure_handle, ...
                       'Position', [0.1, 0.3, 0.8, 0.65]);
    
    image_handle = imshow(frames(:,:,current_frame),'Parent',axis_handle);
    
    slider_handle = uicontrol('Style', 'slider', ...
                              'Min', 1, ...
                              'Max', n_frames, ...
                              'Value', 1, ...
                              'SliderStep', [1/(n_frames-1), 1/(n_frames-1)], ...
                              'Units', 'normalized', ...
                              'Position', [0.15, 0.2, 0.7, 0.05]);

    count_handle = uicontrol('Style', 'text', ...
                             'String', 'Frame: 1', ...
                             'Units', 'normalized', ...
                             'Position', [0.15, 0.095, 0.15, 0.05], ...
                             'FontSize', 12,...
                             'HorizontalAlignment', 'left');

    range_handle = uicontrol('Style', 'edit', ...
                             'String', sprintf('[1:%d]',n_frames), ...
                             'Units', 'normalized', ...
                             'Position', [0.35, 0.1, 0.3, 0.05], ...
                             'FontSize', 12);
    
    rectangle_handle = drawrectangle('Parent',axis_handle, ...
                                     'Color', 'r', ...
                                     'FaceAlpha', 0, ...
                                     'Position', rectangle_position); 

    save_handle = uicontrol('Style', 'pushbutton', ...
                            'String', 'Save', ...
                            'Units', 'normalized', ...
                            'Position', [0.7, 0.1, 0.15, 0.05], ...
                            'FontSize', 12, ...
                            'Callback',@save_callback);

    slider_handle.Callback =  @slider_callback;
    addlistener(rectangle_handle, 'ROIMoved', @rectangle_callback);
    save_handle.Callback =  @save_callback;

    function update()
        count_handle.String = sprintf('Frame: %d', current_frame);
        image_handle.CData = frames(:,:,current_frame);
    end
    
    function slider_callback(~,~)
        current_frame = round(slider_handle.Value);
        update;
    end 

    function rectangle_callback(~,~)
        rectangle_position = round(rectangle_handle.Position);
        % add validation
        update;
    end 

    function save_callback(~,~)
        try range = eval(range_handle.String);
        catch 
            error("Invalid frames to keep range"); 
        end
        if ~(max(range) <= n_frames || min(range) >= 1 || all(mod(range, 1) == 0) || isempty(range))
            error("Invalid frames to keep range"); 
        end 
        frames = frames(rectangle_position(2):(rectangle_position(2)+rectangle_position(4)), ...
                              rectangle_position(1):(rectangle_position(1)+rectangle_position(3)), ...
                              range);
        close
    end 

    waitfor(figure_handle);
end